Metadata-Version: 2.4
Name: apex_analysis
Version: 1.0.0
Summary: Apex Analysis - Stock market analysis tool with sentiment analysis
Home-page: https://github.com/yourusername/apex-analysis
Author: Your Name
Author-email: your.email@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: yfinance>=0.2.3
Requires-Dist: pandas>=1.3.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: matplotlib>=3.4.0
Requires-Dist: textblob>=0.17.1
Requires-Dist: feedparser>=6.0.8
Requires-Dist: beautifulsoup4>=4.9.3
Requires-Dist: requests>=2.26.0
Requires-Dist: PyYAML>=5.4.1
Requires-Dist: nltk>=3.8.1
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: pytz>=2022.1
Requires-Dist: scikit-learn>=1.0.2
Requires-Dist: tqdm>=4.62.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Apex Analysis

A comprehensive stock analysis tool that combines price data with news sentiment analysis to provide insights into stock performance.

## Features

- Real-time stock price data fetching
- News sentiment analysis
- Volatility and correlation metrics
- Combined price and sentiment visualization
- Automated report generation

## Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/yourusername/apex-analysis.git
   cd apex-analysis
   ```

2. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```

## Usage

Run the application:
```bash
python main.py
```

Enter a stock ticker (e.g., AAPL) when prompted. The application will generate analysis reports in the `reports` directory.

## Project Structure

- `main.py`: Entry point of the application
- `fetch_data.py`: Handles stock data fetching using yfinance
- `news_processor.py`: Processes and fetches news articles
- `sentiment_analyzer.py`: Performs sentiment analysis on news articles
- `aggregator.py`: Aggregates and analyzes data
- `ui.py`: Command-line interface
- `utils.py`: Utility functions
- `config.py`: Configuration settings
- `reports/`: Directory for generated reports and visualizations

## Security

- Uses HTTPS for all API requests
- Respects `robots.txt` rules when scraping news
- No API keys or sensitive information is hardcoded

## Contributing

Contributions are welcome! Please follow these steps:

1. Fork the repository
2. Create a feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

Distributed under the MIT License. See `LICENSE` for more information.

## Contact

Your Name - [@your_twitter](https://twitter.com/your_twitter)

Project Link: [https://github.com/yourusername/apex-analysis](https://github.com/yourusername/apex-analysis)
